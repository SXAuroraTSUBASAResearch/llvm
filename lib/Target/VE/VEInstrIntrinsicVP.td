def : Pat<(int_ve_vl_vld_vss i64:$sy, i64:$sz, v256f64:$vd, i32:$vl), (vldvssvl i64:$sy, i64:$sz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vldu_vss i64:$sy, i64:$sz, v256f64:$vd, i32:$vl), (vlduvssvl i64:$sy, i64:$sz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vldlsx_vss i64:$sy, i64:$sz, v256f64:$vd, i32:$vl), (vldlsxvssvl i64:$sy, i64:$sz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vldlzx_vss i64:$sy, i64:$sz, v256f64:$vd, i32:$vl), (vldlzxvssvl i64:$sy, i64:$sz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vld2d_vss i64:$sy, i64:$sz, v256f64:$vd, i32:$vl), (vld2dvssvl i64:$sy, i64:$sz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vldu2d_vss i64:$sy, i64:$sz, v256f64:$vd, i32:$vl), (vldu2dvssvl i64:$sy, i64:$sz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vldl2dsx_vss i64:$sy, i64:$sz, v256f64:$vd, i32:$vl), (vldl2dsxvssvl i64:$sy, i64:$sz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vldl2dzx_vss i64:$sy, i64:$sz, v256f64:$vd, i32:$vl), (vldl2dzxvssvl i64:$sy, i64:$sz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vst_vss v256f64:$vx, i64:$sy, i64:$sz, i32:$vl), (vstvssl v256f64:$vx, i64:$sy, i64:$sz, i32:$vl)>;
def : Pat<(int_ve_vl_vstot_vss v256f64:$vx, i64:$sy, i64:$sz, i32:$vl), (vstotvssl v256f64:$vx, i64:$sy, i64:$sz, i32:$vl)>;
def : Pat<(int_ve_vl_vstu_vss v256f64:$vx, i64:$sy, i64:$sz, i32:$vl), (vstuvssl v256f64:$vx, i64:$sy, i64:$sz, i32:$vl)>;
def : Pat<(int_ve_vl_vstuot_vss v256f64:$vx, i64:$sy, i64:$sz, i32:$vl), (vstuotvssl v256f64:$vx, i64:$sy, i64:$sz, i32:$vl)>;
def : Pat<(int_ve_vl_vstlot_vss v256f64:$vx, i64:$sy, i64:$sz, i32:$vl), (vstlotvssl v256f64:$vx, i64:$sy, i64:$sz, i32:$vl)>;
def : Pat<(int_ve_vl_vst2d_vss v256f64:$vx, i64:$sy, i64:$sz, i32:$vl), (vst2dvssl v256f64:$vx, i64:$sy, i64:$sz, i32:$vl)>;
def : Pat<(int_ve_vl_vst2dot_vss v256f64:$vx, i64:$sy, i64:$sz, i32:$vl), (vst2dotvssl v256f64:$vx, i64:$sy, i64:$sz, i32:$vl)>;
def : Pat<(int_ve_vl_vstu2d_vss v256f64:$vx, i64:$sy, i64:$sz, i32:$vl), (vstu2dvssl v256f64:$vx, i64:$sy, i64:$sz, i32:$vl)>;
def : Pat<(int_ve_vl_vstu2dot_vss v256f64:$vx, i64:$sy, i64:$sz, i32:$vl), (vstu2dotvssl v256f64:$vx, i64:$sy, i64:$sz, i32:$vl)>;
def : Pat<(int_ve_vl_vstl2d_vss v256f64:$vx, i64:$sy, i64:$sz, i32:$vl), (vstl2dvssl v256f64:$vx, i64:$sy, i64:$sz, i32:$vl)>;
def : Pat<(int_ve_vl_vstl2dot_vss v256f64:$vx, i64:$sy, i64:$sz, i32:$vl), (vstl2dotvssl v256f64:$vx, i64:$sy, i64:$sz, i32:$vl)>;
def : Pat<(int_ve_vl_vbrd_vs_f64 f64:$sy, v256f64:$vd, i32:$vl), (vbrdvsvl f64:$sy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vbrd_vs_i64 i64:$sy, v256f64:$vd, i32:$vl), (vbrdvsvl i64:$sy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vbrdu_vs_f32 f32:$sy, v256f64:$vd, i32:$vl), (vbrduvsvl f32:$sy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvbrd_vs_i64 i64:$sy, v256f64:$vd, i32:$vl), (pvbrdvsvl i64:$sy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vmv_vsv i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vmvvsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vaddul_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vaddulvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vadduw_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vadduwvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vadduw_vsv i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vadduwvsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvaddu_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvadduvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvaddu_vsv i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvadduvsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vaddswsx_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vaddswsxvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vaddswsx_vsv i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vaddswsxvsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vaddswzx_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vaddswzxvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vaddswzx_vsv i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vaddswzxvsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvadds_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvaddsvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvadds_vsv i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvaddsvsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vaddsl_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vaddslvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vsubul_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vsubulvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vsubuw_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vsubuwvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vsubuw_vsv i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vsubuwvsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvsubu_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvsubuvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvsubu_vsv i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvsubuvsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vsubswsx_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vsubswsxvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vsubswsx_vsv i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vsubswsxvsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vsubswzx_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vsubswzxvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vsubswzx_vsv i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vsubswzxvsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvsubs_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvsubsvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvsubs_vsv i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvsubsvsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vsubsl_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vsubslvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vmulul_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vmululvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vmuluw_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vmuluwvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vmuluw_vsv i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vmuluwvsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vmulswsx_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vmulswsxvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vmulswsx_vsv i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vmulswsxvsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vmulswzx_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vmulswzxvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vmulswzx_vsv i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vmulswzxvsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vmulsl_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vmulslvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vmulslw_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vmulslwvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vmulslw_vsv i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vmulslwvsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vdivul_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vdivulvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vdivuw_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vdivuwvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vdivuw_vsv i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vdivuwvsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vdivul_vvs v256f64:$vy, i64:$sy, v256f64:$vd, i32:$vl), (vdivulvvsvl v256f64:$vy, i64:$sy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vdivuw_vvs v256f64:$vy, i32:$sy, v256f64:$vd, i32:$vl), (vdivuwvvsvl v256f64:$vy, i32:$sy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vdivswsx_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vdivswsxvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vdivswsx_vsv i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vdivswsxvsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vdivswzx_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vdivswzxvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vdivswzx_vsv i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vdivswzxvsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vdivswsx_vvs v256f64:$vy, i32:$sy, v256f64:$vd, i32:$vl), (vdivswsxvvsvl v256f64:$vy, i32:$sy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vdivswzx_vvs v256f64:$vy, i32:$sy, v256f64:$vd, i32:$vl), (vdivswzxvvsvl v256f64:$vy, i32:$sy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vdivsl_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vdivslvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vdivsl_vvs v256f64:$vy, i64:$sy, v256f64:$vd, i32:$vl), (vdivslvvsvl v256f64:$vy, i64:$sy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vcmpul_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vcmpulvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vcmpuw_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vcmpuwvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vcmpuw_vsv i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vcmpuwvsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvcmpu_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvcmpuvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvcmpu_vsv i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvcmpuvsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vcmpswsx_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vcmpswsxvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vcmpswsx_vsv i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vcmpswsxvsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vcmpswzx_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vcmpswzxvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vcmpswzx_vsv i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vcmpswzxvsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvcmps_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvcmpsvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvcmps_vsv i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvcmpsvsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vcmpsl_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vcmpslvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vmaxswsx_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vmaxswsxvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vmaxswsx_vsv i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vmaxswsxvsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vmaxswzx_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vmaxswzxvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vmaxswzx_vsv i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vmaxswzxvsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvmaxs_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvmaxsvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvmaxs_vsv i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvmaxsvsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vminswsx_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vminswsxvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vminswsx_vsv i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vminswsxvsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vminswzx_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vminswzxvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vminswzx_vsv i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vminswzxvsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvmins_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvminsvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvmins_vsv i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvminsvsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vmaxsl_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vmaxslvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vminsl_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vminslvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vand_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vandvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vand_vsv i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vandvsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvand_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvandvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvand_vsv i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvandvsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vor_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vorvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vor_vsv i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vorvsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvor_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvorvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvor_vsv i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvorvsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vxor_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vxorvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vxor_vsv i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vxorvsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvxor_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvxorvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvxor_vsv i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvxorvsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_veqv_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (veqvvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_veqv_vsv i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (veqvvsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pveqv_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (pveqvvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pveqv_vsv i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (pveqvvsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vseq_v v256f64:$vd, i32:$vl), (vseqvvl v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvseqlo_v v256f64:$vd, i32:$vl), (pvseqlovvl v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvsequp_v v256f64:$vd, i32:$vl), (pvsequpvvl v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvseq_v v256f64:$vd, i32:$vl), (pvseqvvl v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vsll_vvv v256f64:$vz, v256f64:$vy, v256f64:$vd, i32:$vl), (vsllvvvvl v256f64:$vz, v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vsll_vvs v256f64:$vz, i64:$sy, v256f64:$vd, i32:$vl), (vsllvvsvl v256f64:$vz, i64:$sy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvsll_vvv v256f64:$vz, v256f64:$vy, v256f64:$vd, i32:$vl), (pvsllvvvvl v256f64:$vz, v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvsll_vvs v256f64:$vz, i64:$sy, v256f64:$vd, i32:$vl), (pvsllvvsvl v256f64:$vz, i64:$sy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vsrl_vvv v256f64:$vz, v256f64:$vy, v256f64:$vd, i32:$vl), (vsrlvvvvl v256f64:$vz, v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vsrl_vvs v256f64:$vz, i64:$sy, v256f64:$vd, i32:$vl), (vsrlvvsvl v256f64:$vz, i64:$sy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvsrl_vvv v256f64:$vz, v256f64:$vy, v256f64:$vd, i32:$vl), (pvsrlvvvvl v256f64:$vz, v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvsrl_vvs v256f64:$vz, i64:$sy, v256f64:$vd, i32:$vl), (pvsrlvvsvl v256f64:$vz, i64:$sy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vslaw_vvv v256f64:$vz, v256f64:$vy, v256f64:$vd, i32:$vl), (vslawvvvvl v256f64:$vz, v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vslaw_vvs v256f64:$vz, i64:$sy, v256f64:$vd, i32:$vl), (vslawvvsvl v256f64:$vz, i64:$sy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvsla_vvv v256f64:$vz, v256f64:$vy, v256f64:$vd, i32:$vl), (pvslavvvvl v256f64:$vz, v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvsla_vvs v256f64:$vz, i64:$sy, v256f64:$vd, i32:$vl), (pvslavvsvl v256f64:$vz, i64:$sy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vslal_vvv v256f64:$vz, v256f64:$vy, v256f64:$vd, i32:$vl), (vslalvvvvl v256f64:$vz, v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vslal_vvs v256f64:$vz, i64:$sy, v256f64:$vd, i32:$vl), (vslalvvsvl v256f64:$vz, i64:$sy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vsraw_vvv v256f64:$vz, v256f64:$vy, v256f64:$vd, i32:$vl), (vsrawvvvvl v256f64:$vz, v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vsraw_vvs v256f64:$vz, i64:$sy, v256f64:$vd, i32:$vl), (vsrawvvsvl v256f64:$vz, i64:$sy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvsra_vvv v256f64:$vz, v256f64:$vy, v256f64:$vd, i32:$vl), (pvsravvvvl v256f64:$vz, v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvsra_vvs v256f64:$vz, i64:$sy, v256f64:$vd, i32:$vl), (pvsravvsvl v256f64:$vz, i64:$sy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vsral_vvv v256f64:$vz, v256f64:$vy, v256f64:$vd, i32:$vl), (vsralvvvvl v256f64:$vz, v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vsral_vvs v256f64:$vz, i64:$sy, v256f64:$vd, i32:$vl), (vsralvvsvl v256f64:$vz, i64:$sy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfaddd_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfadddvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfaddd_vsv f64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfadddvsvvl f64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfadds_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfaddsvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfadds_vsv f32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfaddsvsvvl f32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvfadd_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvfaddvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvfadd_vsv i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvfaddvsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfsubd_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfsubdvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfsubd_vsv f64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfsubdvsvvl f64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfsubs_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfsubsvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfsubs_vsv f32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfsubsvsvvl f32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvfsub_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvfsubvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvfsub_vsv i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvfsubvsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfmuld_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfmuldvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfmuld_vsv f64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfmuldvsvvl f64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvfmul_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvfmulvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfdivd_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfdivdvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfdivd_vsv f64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfdivdvsvvl f64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfdivs_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfdivsvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfdivs_vsv f32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfdivsvsvvl f32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfsqrtd_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vfsqrtdvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfsqrts_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vfsqrtsvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfcmpd_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfcmpdvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfcmpd_vsv f64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfcmpdvsvvl f64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfcmps_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfcmpsvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfcmps_vsv f32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfcmpsvsvvl f32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvfcmp_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvfcmpvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvfcmp_vsv i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvfcmpvsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfmaxd_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfmaxdvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfmaxd_vsv f64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfmaxdvsvvl f64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfmaxs_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfmaxsvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfmaxs_vsv f32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfmaxsvsvvl f32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvfmax_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvfmaxvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvfmax_vsv i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvfmaxvsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfmind_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfmindvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfmind_vsv f64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfmindvsvvl f64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfmins_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfminsvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfmins_vsv f32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfminsvsvvl f32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvfmin_vvv v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvfminvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvfmin_vsv i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvfminvsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfmadd_vvvv v256f64:$vy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl), (vfmaddvvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfmadd_vsvv f64:$sy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl), (vfmaddvsvvvl f64:$sy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfmadd_vvsv v256f64:$vy, f64:$sy, v256f64:$vw, v256f64:$vd, i32:$vl), (vfmaddvvsvvl v256f64:$vy, f64:$sy, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfmads_vvvv v256f64:$vy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl), (vfmadsvvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfmads_vsvv f32:$sy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl), (vfmadsvsvvvl f32:$sy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfmads_vvsv v256f64:$vy, f32:$sy, v256f64:$vw, v256f64:$vd, i32:$vl), (vfmadsvvsvvl v256f64:$vy, f32:$sy, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvfmad_vvvv v256f64:$vy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl), (pvfmadvvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvfmad_vsvv i64:$sy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl), (pvfmadvsvvvl i64:$sy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvfmad_vvsv v256f64:$vy, i64:$sy, v256f64:$vw, v256f64:$vd, i32:$vl), (pvfmadvvsvvl v256f64:$vy, i64:$sy, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfmsbd_vvvv v256f64:$vy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl), (vfmsbdvvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfmsbd_vsvv f64:$sy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl), (vfmsbdvsvvvl f64:$sy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfmsbd_vvsv v256f64:$vy, f64:$sy, v256f64:$vw, v256f64:$vd, i32:$vl), (vfmsbdvvsvvl v256f64:$vy, f64:$sy, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfmsbs_vvvv v256f64:$vy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl), (vfmsbsvvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfmsbs_vsvv f32:$sy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl), (vfmsbsvsvvvl f32:$sy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfmsbs_vvsv v256f64:$vy, f32:$sy, v256f64:$vw, v256f64:$vd, i32:$vl), (vfmsbsvvsvvl v256f64:$vy, f32:$sy, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvfmsb_vvvv v256f64:$vy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl), (pvfmsbvvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvfmsb_vsvv i64:$sy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl), (pvfmsbvsvvvl i64:$sy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvfmsb_vvsv v256f64:$vy, i64:$sy, v256f64:$vw, v256f64:$vd, i32:$vl), (pvfmsbvvsvvl v256f64:$vy, i64:$sy, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfnmadd_vvvv v256f64:$vy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl), (vfnmaddvvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfnmadd_vsvv f64:$sy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl), (vfnmaddvsvvvl f64:$sy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfnmadd_vvsv v256f64:$vy, f64:$sy, v256f64:$vw, v256f64:$vd, i32:$vl), (vfnmaddvvsvvl v256f64:$vy, f64:$sy, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfnmads_vvvv v256f64:$vy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl), (vfnmadsvvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfnmads_vsvv f32:$sy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl), (vfnmadsvsvvvl f32:$sy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfnmads_vvsv v256f64:$vy, f32:$sy, v256f64:$vw, v256f64:$vd, i32:$vl), (vfnmadsvvsvvl v256f64:$vy, f32:$sy, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvfnmad_vvvv v256f64:$vy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl), (pvfnmadvvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvfnmad_vsvv i64:$sy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl), (pvfnmadvsvvvl i64:$sy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvfnmad_vvsv v256f64:$vy, i64:$sy, v256f64:$vw, v256f64:$vd, i32:$vl), (pvfnmadvvsvvl v256f64:$vy, i64:$sy, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfnmsbd_vvvv v256f64:$vy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl), (vfnmsbdvvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfnmsbd_vsvv f64:$sy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl), (vfnmsbdvsvvvl f64:$sy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfnmsbd_vvsv v256f64:$vy, f64:$sy, v256f64:$vw, v256f64:$vd, i32:$vl), (vfnmsbdvvsvvl v256f64:$vy, f64:$sy, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfnmsbs_vvvv v256f64:$vy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl), (vfnmsbsvvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfnmsbs_vsvv f32:$sy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl), (vfnmsbsvsvvvl f32:$sy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfnmsbs_vvsv v256f64:$vy, f32:$sy, v256f64:$vw, v256f64:$vd, i32:$vl), (vfnmsbsvvsvvl v256f64:$vy, f32:$sy, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvfnmsb_vvvv v256f64:$vy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl), (pvfnmsbvvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvfnmsb_vsvv i64:$sy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl), (pvfnmsbvsvvvl i64:$sy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvfnmsb_vvsv v256f64:$vy, i64:$sy, v256f64:$vw, v256f64:$vd, i32:$vl), (pvfnmsbvvsvvl v256f64:$vy, i64:$sy, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vrcpd_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vrcpdvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vrcps_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vrcpsvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvrcp_vv v256f64:$vy, v256f64:$vd, i32:$vl), (pvrcpvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vrsqrtd_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vrsqrtdvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vrsqrts_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vrsqrtsvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvrsqrt_vv v256f64:$vy, v256f64:$vd, i32:$vl), (pvrsqrtvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vcvtwdsx_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vcvtwdsxvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vcvtwdsxrz_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vcvtwdsxrzvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vcvtwdzx_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vcvtwdzxvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vcvtwdzxrz_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vcvtwdzxrzvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vcvtwssx_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vcvtwssxvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vcvtwssxrz_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vcvtwssxrzvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vcvtwszx_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vcvtwszxvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vcvtwszxrz_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vcvtwszxrzvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvcvtws_vv v256f64:$vy, v256f64:$vd, i32:$vl), (pvcvtwsvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvcvtwsrz_vv v256f64:$vy, v256f64:$vd, i32:$vl), (pvcvtwsrzvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vcvtld_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vcvtldvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vcvtldrz_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vcvtldrzvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vcvtdw_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vcvtdwvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vcvtsw_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vcvtswvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvcvtsw_vv v256f64:$vy, v256f64:$vd, i32:$vl), (pvcvtswvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vcvtdl_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vcvtdlvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vcvtds_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vcvtdsvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vcvtsd_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vcvtsdvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vshf_vvvs v256f64:$vy, v256f64:$vz, i64:$sy, v256f64:$vd, i32:$vl), (vshfvvvsvl v256f64:$vy, v256f64:$vz, i64:$sy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vsumwsx_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vsumwsxvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vsumwzx_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vsumwzxvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vsuml_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vsumlvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfsumd_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vfsumdvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfsums_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vfsumsvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vrmaxswfstsx_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vrmaxswfstsxvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vrmaxswlstsx_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vrmaxswlstsxvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vrmaxswfstzx_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vrmaxswfstzxvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vrmaxswlstzx_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vrmaxswlstzxvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vrminswfstsx_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vrminswfstsxvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vrminswlstsx_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vrminswlstsxvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vrminswfstzx_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vrminswfstzxvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vrminswlstzx_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vrminswlstzxvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vrmaxslfst_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vrmaxslfstvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vrmaxsllst_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vrmaxsllstvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vrminslfst_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vrminslfstvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vrminsllst_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vrminsllstvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfrmaxdfst_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vfrmaxdfstvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfrmaxdlst_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vfrmaxdlstvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfrmaxsfst_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vfrmaxsfstvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfrmaxslst_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vfrmaxslstvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfrmindfst_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vfrmindfstvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfrmindlst_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vfrmindlstvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfrminsfst_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vfrminsfstvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfrminslst_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vfrminslstvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vgt_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vgtvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vgtu_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vgtuvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vgtlsx_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vgtlsxvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vgtlzx_vv v256f64:$vy, v256f64:$vd, i32:$vl), (vgtlzxvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vsc_vv v256f64:$vx, v256f64:$vy, i32:$vl), (vscvvl v256f64:$vx, v256f64:$vy, i32:$vl)>;
def : Pat<(int_ve_vl_vscot_vv v256f64:$vx, v256f64:$vy, i32:$vl), (vscotvvl v256f64:$vx, v256f64:$vy, i32:$vl)>;
def : Pat<(int_ve_vl_vscu_vv v256f64:$vx, v256f64:$vy, i32:$vl), (vscuvvl v256f64:$vx, v256f64:$vy, i32:$vl)>;
def : Pat<(int_ve_vl_vscuot_vv v256f64:$vx, v256f64:$vy, i32:$vl), (vscuotvvl v256f64:$vx, v256f64:$vy, i32:$vl)>;
def : Pat<(int_ve_vl_vscl_vv v256f64:$vx, v256f64:$vy, i32:$vl), (vsclvvl v256f64:$vx, v256f64:$vy, i32:$vl)>;
def : Pat<(int_ve_vl_vsclot_vv v256f64:$vx, v256f64:$vy, i32:$vl), (vsclotvvl v256f64:$vx, v256f64:$vy, i32:$vl)>;
