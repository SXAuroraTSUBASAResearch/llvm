def : Pat<(int_ve_vl_vld_vssvl i64:$sy, i64:$sz, v256f64:$vd, i32:$vl), (vldvssvl i64:$sy, i64:$sz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vldu_vssvl i64:$sy, i64:$sz, v256f64:$vd, i32:$vl), (vlduvssvl i64:$sy, i64:$sz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vldlsx_vssvl i64:$sy, i64:$sz, v256f64:$vd, i32:$vl), (vldlsxvssvl i64:$sy, i64:$sz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vldlzx_vssvl i64:$sy, i64:$sz, v256f64:$vd, i32:$vl), (vldlzxvssvl i64:$sy, i64:$sz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vld2d_vssvl i64:$sy, i64:$sz, v256f64:$vd, i32:$vl), (vld2dvssvl i64:$sy, i64:$sz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vldu2d_vssvl i64:$sy, i64:$sz, v256f64:$vd, i32:$vl), (vldu2dvssvl i64:$sy, i64:$sz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vldl2dsx_vssvl i64:$sy, i64:$sz, v256f64:$vd, i32:$vl), (vldl2dsxvssvl i64:$sy, i64:$sz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vldl2dzx_vssvl i64:$sy, i64:$sz, v256f64:$vd, i32:$vl), (vldl2dzxvssvl i64:$sy, i64:$sz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vst_vssl v256f64:$vx, i64:$sy, i64:$sz, i32:$vl), (vstvssl v256f64:$vx, i64:$sy, i64:$sz, i32:$vl)>;
def : Pat<(int_ve_vl_vstot_vssl v256f64:$vx, i64:$sy, i64:$sz, i32:$vl), (vstotvssl v256f64:$vx, i64:$sy, i64:$sz, i32:$vl)>;
def : Pat<(int_ve_vl_vstu_vssl v256f64:$vx, i64:$sy, i64:$sz, i32:$vl), (vstuvssl v256f64:$vx, i64:$sy, i64:$sz, i32:$vl)>;
def : Pat<(int_ve_vl_vstuot_vssl v256f64:$vx, i64:$sy, i64:$sz, i32:$vl), (vstuotvssl v256f64:$vx, i64:$sy, i64:$sz, i32:$vl)>;
def : Pat<(int_ve_vl_vstlot_vssl v256f64:$vx, i64:$sy, i64:$sz, i32:$vl), (vstlotvssl v256f64:$vx, i64:$sy, i64:$sz, i32:$vl)>;
def : Pat<(int_ve_vl_vst2d_vssl v256f64:$vx, i64:$sy, i64:$sz, i32:$vl), (vst2dvssl v256f64:$vx, i64:$sy, i64:$sz, i32:$vl)>;
def : Pat<(int_ve_vl_vst2dot_vssl v256f64:$vx, i64:$sy, i64:$sz, i32:$vl), (vst2dotvssl v256f64:$vx, i64:$sy, i64:$sz, i32:$vl)>;
def : Pat<(int_ve_vl_vstu2d_vssl v256f64:$vx, i64:$sy, i64:$sz, i32:$vl), (vstu2dvssl v256f64:$vx, i64:$sy, i64:$sz, i32:$vl)>;
def : Pat<(int_ve_vl_vstu2dot_vssl v256f64:$vx, i64:$sy, i64:$sz, i32:$vl), (vstu2dotvssl v256f64:$vx, i64:$sy, i64:$sz, i32:$vl)>;
def : Pat<(int_ve_vl_vstl2d_vssl v256f64:$vx, i64:$sy, i64:$sz, i32:$vl), (vstl2dvssl v256f64:$vx, i64:$sy, i64:$sz, i32:$vl)>;
def : Pat<(int_ve_vl_vstl2dot_vssl v256f64:$vx, i64:$sy, i64:$sz, i32:$vl), (vstl2dotvssl v256f64:$vx, i64:$sy, i64:$sz, i32:$vl)>;
def : Pat<(int_ve_vl_vbrd_vs_f64vl f64:$sy, v256f64:$vd, i32:$vl), (vbrdvsvl f64:$sy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vbrd_vs_i64vl i64:$sy, v256f64:$vd, i32:$vl), (vbrdvsvl i64:$sy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vbrdu_vs_f32vl f32:$sy, v256f64:$vd, i32:$vl), (vbrduvsvl f32:$sy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvbrd_vs_i64vl i64:$sy, v256f64:$vd, i32:$vl), (pvbrdvsvl i64:$sy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vmv_vsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vmvvsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vaddul_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vaddulvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vadduw_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vadduwvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vadduw_vsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vadduwvsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvaddu_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvadduvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvaddu_vsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvadduvsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vaddswsx_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vaddswsxvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vaddswsx_vsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vaddswsxvsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vaddswzx_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vaddswzxvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vaddswzx_vsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vaddswzxvsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvadds_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvaddsvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvadds_vsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvaddsvsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vaddsl_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vaddslvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vsubul_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vsubulvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vsubuw_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vsubuwvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vsubuw_vsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vsubuwvsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvsubu_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvsubuvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvsubu_vsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvsubuvsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vsubswsx_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vsubswsxvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vsubswsx_vsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vsubswsxvsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vsubswzx_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vsubswzxvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vsubswzx_vsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vsubswzxvsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvsubs_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvsubsvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvsubs_vsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvsubsvsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vsubsl_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vsubslvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vmulul_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vmululvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vmuluw_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vmuluwvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vmuluw_vsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vmuluwvsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vmulswsx_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vmulswsxvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vmulswsx_vsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vmulswsxvsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vmulswzx_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vmulswzxvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vmulswzx_vsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vmulswzxvsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vmulsl_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vmulslvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vmulslw_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vmulslwvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vmulslw_vsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vmulslwvsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vdivul_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vdivulvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vdivuw_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vdivuwvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vdivuw_vsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vdivuwvsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vdivul_vvsvl v256f64:$vy, i64:$sy, v256f64:$vd, i32:$vl), (vdivulvvsvl v256f64:$vy, i64:$sy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vdivuw_vvsvl v256f64:$vy, i32:$sy, v256f64:$vd, i32:$vl), (vdivuwvvsvl v256f64:$vy, i32:$sy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vdivswsx_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vdivswsxvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vdivswsx_vsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vdivswsxvsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vdivswzx_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vdivswzxvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vdivswzx_vsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vdivswzxvsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vdivswsx_vvsvl v256f64:$vy, i32:$sy, v256f64:$vd, i32:$vl), (vdivswsxvvsvl v256f64:$vy, i32:$sy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vdivswzx_vvsvl v256f64:$vy, i32:$sy, v256f64:$vd, i32:$vl), (vdivswzxvvsvl v256f64:$vy, i32:$sy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vdivsl_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vdivslvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vdivsl_vvsvl v256f64:$vy, i64:$sy, v256f64:$vd, i32:$vl), (vdivslvvsvl v256f64:$vy, i64:$sy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vcmpul_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vcmpulvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vcmpuw_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vcmpuwvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vcmpuw_vsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vcmpuwvsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvcmpu_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvcmpuvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvcmpu_vsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvcmpuvsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vcmpswsx_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vcmpswsxvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vcmpswsx_vsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vcmpswsxvsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vcmpswzx_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vcmpswzxvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vcmpswzx_vsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vcmpswzxvsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvcmps_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvcmpsvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvcmps_vsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvcmpsvsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vcmpsl_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vcmpslvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vmaxswsx_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vmaxswsxvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vmaxswsx_vsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vmaxswsxvsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vmaxswzx_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vmaxswzxvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vmaxswzx_vsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vmaxswzxvsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvmaxs_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvmaxsvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvmaxs_vsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvmaxsvsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vminswsx_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vminswsxvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vminswsx_vsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vminswsxvsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vminswzx_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vminswzxvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vminswzx_vsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vminswzxvsvvl i32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvmins_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvminsvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvmins_vsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvminsvsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vmaxsl_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vmaxslvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vminsl_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vminslvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vand_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vandvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vand_vsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vandvsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvand_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvandvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvand_vsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvandvsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vor_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vorvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vor_vsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vorvsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvor_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvorvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvor_vsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvorvsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vxor_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vxorvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vxor_vsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vxorvsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvxor_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvxorvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvxor_vsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvxorvsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_veqv_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (veqvvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_veqv_vsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (veqvvsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pveqv_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (pveqvvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pveqv_vsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (pveqvvsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vseq_vvl v256f64:$vd, i32:$vl), (vseqvvl v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvseqlo_vvl v256f64:$vd, i32:$vl), (pvseqlovvl v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvsequp_vvl v256f64:$vd, i32:$vl), (pvsequpvvl v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvseq_vvl v256f64:$vd, i32:$vl), (pvseqvvl v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vsll_vvvvl v256f64:$vz, v256f64:$vy, v256f64:$vd, i32:$vl), (vsllvvvvl v256f64:$vz, v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vsll_vvsvl v256f64:$vz, i64:$sy, v256f64:$vd, i32:$vl), (vsllvvsvl v256f64:$vz, i64:$sy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvsll_vvvvl v256f64:$vz, v256f64:$vy, v256f64:$vd, i32:$vl), (pvsllvvvvl v256f64:$vz, v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvsll_vvsvl v256f64:$vz, i64:$sy, v256f64:$vd, i32:$vl), (pvsllvvsvl v256f64:$vz, i64:$sy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vsrl_vvvvl v256f64:$vz, v256f64:$vy, v256f64:$vd, i32:$vl), (vsrlvvvvl v256f64:$vz, v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vsrl_vvsvl v256f64:$vz, i64:$sy, v256f64:$vd, i32:$vl), (vsrlvvsvl v256f64:$vz, i64:$sy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvsrl_vvvvl v256f64:$vz, v256f64:$vy, v256f64:$vd, i32:$vl), (pvsrlvvvvl v256f64:$vz, v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvsrl_vvsvl v256f64:$vz, i64:$sy, v256f64:$vd, i32:$vl), (pvsrlvvsvl v256f64:$vz, i64:$sy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vslaw_vvvvl v256f64:$vz, v256f64:$vy, v256f64:$vd, i32:$vl), (vslawvvvvl v256f64:$vz, v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vslaw_vvsvl v256f64:$vz, i64:$sy, v256f64:$vd, i32:$vl), (vslawvvsvl v256f64:$vz, i64:$sy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvsla_vvvvl v256f64:$vz, v256f64:$vy, v256f64:$vd, i32:$vl), (pvslavvvvl v256f64:$vz, v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvsla_vvsvl v256f64:$vz, i64:$sy, v256f64:$vd, i32:$vl), (pvslavvsvl v256f64:$vz, i64:$sy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vslal_vvvvl v256f64:$vz, v256f64:$vy, v256f64:$vd, i32:$vl), (vslalvvvvl v256f64:$vz, v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vslal_vvsvl v256f64:$vz, i64:$sy, v256f64:$vd, i32:$vl), (vslalvvsvl v256f64:$vz, i64:$sy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vsraw_vvvvl v256f64:$vz, v256f64:$vy, v256f64:$vd, i32:$vl), (vsrawvvvvl v256f64:$vz, v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vsraw_vvsvl v256f64:$vz, i64:$sy, v256f64:$vd, i32:$vl), (vsrawvvsvl v256f64:$vz, i64:$sy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvsra_vvvvl v256f64:$vz, v256f64:$vy, v256f64:$vd, i32:$vl), (pvsravvvvl v256f64:$vz, v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvsra_vvsvl v256f64:$vz, i64:$sy, v256f64:$vd, i32:$vl), (pvsravvsvl v256f64:$vz, i64:$sy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vsral_vvvvl v256f64:$vz, v256f64:$vy, v256f64:$vd, i32:$vl), (vsralvvvvl v256f64:$vz, v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vsral_vvsvl v256f64:$vz, i64:$sy, v256f64:$vd, i32:$vl), (vsralvvsvl v256f64:$vz, i64:$sy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfaddd_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfadddvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfaddd_vsvvl f64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfadddvsvvl f64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfadds_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfaddsvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfadds_vsvvl f32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfaddsvsvvl f32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvfadd_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvfaddvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvfadd_vsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvfaddvsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfsubd_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfsubdvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfsubd_vsvvl f64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfsubdvsvvl f64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfsubs_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfsubsvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfsubs_vsvvl f32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfsubsvsvvl f32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvfsub_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvfsubvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvfsub_vsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvfsubvsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfmuld_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfmuldvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfmuld_vsvvl f64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfmuldvsvvl f64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvfmul_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvfmulvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfdivd_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfdivdvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfdivd_vsvvl f64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfdivdvsvvl f64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfdivs_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfdivsvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfdivs_vsvvl f32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfdivsvsvvl f32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfsqrtd_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vfsqrtdvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfsqrts_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vfsqrtsvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfcmpd_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfcmpdvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfcmpd_vsvvl f64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfcmpdvsvvl f64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfcmps_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfcmpsvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfcmps_vsvvl f32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfcmpsvsvvl f32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvfcmp_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvfcmpvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvfcmp_vsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvfcmpvsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfmaxd_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfmaxdvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfmaxd_vsvvl f64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfmaxdvsvvl f64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfmaxs_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfmaxsvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfmaxs_vsvvl f32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfmaxsvsvvl f32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvfmax_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvfmaxvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvfmax_vsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvfmaxvsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfmind_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfmindvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfmind_vsvvl f64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfmindvsvvl f64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfmins_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfminsvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfmins_vsvvl f32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (vfminsvsvvl f32:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvfmin_vvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvfminvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvfmin_vsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl), (pvfminvsvvl i64:$sy, v256f64:$vz, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfmadd_vvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl), (vfmaddvvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfmadd_vsvvvl f64:$sy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl), (vfmaddvsvvvl f64:$sy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfmadd_vvsvvl v256f64:$vy, f64:$sy, v256f64:$vw, v256f64:$vd, i32:$vl), (vfmaddvvsvvl v256f64:$vy, f64:$sy, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfmads_vvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl), (vfmadsvvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfmads_vsvvvl f32:$sy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl), (vfmadsvsvvvl f32:$sy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfmads_vvsvvl v256f64:$vy, f32:$sy, v256f64:$vw, v256f64:$vd, i32:$vl), (vfmadsvvsvvl v256f64:$vy, f32:$sy, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvfmad_vvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl), (pvfmadvvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvfmad_vsvvvl i64:$sy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl), (pvfmadvsvvvl i64:$sy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvfmad_vvsvvl v256f64:$vy, i64:$sy, v256f64:$vw, v256f64:$vd, i32:$vl), (pvfmadvvsvvl v256f64:$vy, i64:$sy, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfmsbd_vvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl), (vfmsbdvvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfmsbd_vsvvvl f64:$sy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl), (vfmsbdvsvvvl f64:$sy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfmsbd_vvsvvl v256f64:$vy, f64:$sy, v256f64:$vw, v256f64:$vd, i32:$vl), (vfmsbdvvsvvl v256f64:$vy, f64:$sy, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfmsbs_vvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl), (vfmsbsvvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfmsbs_vsvvvl f32:$sy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl), (vfmsbsvsvvvl f32:$sy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfmsbs_vvsvvl v256f64:$vy, f32:$sy, v256f64:$vw, v256f64:$vd, i32:$vl), (vfmsbsvvsvvl v256f64:$vy, f32:$sy, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvfmsb_vvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl), (pvfmsbvvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvfmsb_vsvvvl i64:$sy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl), (pvfmsbvsvvvl i64:$sy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvfmsb_vvsvvl v256f64:$vy, i64:$sy, v256f64:$vw, v256f64:$vd, i32:$vl), (pvfmsbvvsvvl v256f64:$vy, i64:$sy, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfnmadd_vvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl), (vfnmaddvvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfnmadd_vsvvvl f64:$sy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl), (vfnmaddvsvvvl f64:$sy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfnmadd_vvsvvl v256f64:$vy, f64:$sy, v256f64:$vw, v256f64:$vd, i32:$vl), (vfnmaddvvsvvl v256f64:$vy, f64:$sy, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfnmads_vvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl), (vfnmadsvvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfnmads_vsvvvl f32:$sy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl), (vfnmadsvsvvvl f32:$sy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfnmads_vvsvvl v256f64:$vy, f32:$sy, v256f64:$vw, v256f64:$vd, i32:$vl), (vfnmadsvvsvvl v256f64:$vy, f32:$sy, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvfnmad_vvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl), (pvfnmadvvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvfnmad_vsvvvl i64:$sy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl), (pvfnmadvsvvvl i64:$sy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvfnmad_vvsvvl v256f64:$vy, i64:$sy, v256f64:$vw, v256f64:$vd, i32:$vl), (pvfnmadvvsvvl v256f64:$vy, i64:$sy, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfnmsbd_vvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl), (vfnmsbdvvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfnmsbd_vsvvvl f64:$sy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl), (vfnmsbdvsvvvl f64:$sy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfnmsbd_vvsvvl v256f64:$vy, f64:$sy, v256f64:$vw, v256f64:$vd, i32:$vl), (vfnmsbdvvsvvl v256f64:$vy, f64:$sy, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfnmsbs_vvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl), (vfnmsbsvvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfnmsbs_vsvvvl f32:$sy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl), (vfnmsbsvsvvvl f32:$sy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfnmsbs_vvsvvl v256f64:$vy, f32:$sy, v256f64:$vw, v256f64:$vd, i32:$vl), (vfnmsbsvvsvvl v256f64:$vy, f32:$sy, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvfnmsb_vvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl), (pvfnmsbvvvvvl v256f64:$vy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvfnmsb_vsvvvl i64:$sy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl), (pvfnmsbvsvvvl i64:$sy, v256f64:$vz, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvfnmsb_vvsvvl v256f64:$vy, i64:$sy, v256f64:$vw, v256f64:$vd, i32:$vl), (pvfnmsbvvsvvl v256f64:$vy, i64:$sy, v256f64:$vw, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vrcpd_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vrcpdvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vrcps_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vrcpsvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvrcp_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (pvrcpvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vrsqrtd_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vrsqrtdvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vrsqrts_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vrsqrtsvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvrsqrt_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (pvrsqrtvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vcvtwdsx_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vcvtwdsxvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vcvtwdsxrz_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vcvtwdsxrzvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vcvtwdzx_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vcvtwdzxvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vcvtwdzxrz_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vcvtwdzxrzvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vcvtwssx_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vcvtwssxvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vcvtwssxrz_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vcvtwssxrzvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vcvtwszx_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vcvtwszxvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vcvtwszxrz_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vcvtwszxrzvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvcvtws_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (pvcvtwsvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvcvtwsrz_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (pvcvtwsrzvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vcvtld_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vcvtldvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vcvtldrz_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vcvtldrzvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vcvtdw_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vcvtdwvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vcvtsw_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vcvtswvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_pvcvtsw_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (pvcvtswvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vcvtdl_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vcvtdlvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vcvtds_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vcvtdsvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vcvtsd_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vcvtsdvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vshf_vvvsvl v256f64:$vy, v256f64:$vz, i64:$sy, v256f64:$vd, i32:$vl), (vshfvvvsvl v256f64:$vy, v256f64:$vz, i64:$sy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vsumwsx_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vsumwsxvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vsumwzx_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vsumwzxvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vsuml_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vsumlvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfsumd_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vfsumdvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfsums_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vfsumsvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vrmaxswfstsx_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vrmaxswfstsxvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vrmaxswlstsx_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vrmaxswlstsxvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vrmaxswfstzx_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vrmaxswfstzxvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vrmaxswlstzx_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vrmaxswlstzxvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vrminswfstsx_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vrminswfstsxvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vrminswlstsx_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vrminswlstsxvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vrminswfstzx_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vrminswfstzxvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vrminswlstzx_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vrminswlstzxvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vrmaxslfst_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vrmaxslfstvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vrmaxsllst_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vrmaxsllstvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vrminslfst_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vrminslfstvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vrminsllst_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vrminsllstvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfrmaxdfst_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vfrmaxdfstvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfrmaxdlst_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vfrmaxdlstvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfrmaxsfst_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vfrmaxsfstvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfrmaxslst_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vfrmaxslstvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfrmindfst_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vfrmindfstvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfrmindlst_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vfrmindlstvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfrminsfst_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vfrminsfstvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vfrminslst_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vfrminslstvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vgt_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vgtvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vgtu_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vgtuvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vgtlsx_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vgtlsxvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vgtlzx_vvvl v256f64:$vy, v256f64:$vd, i32:$vl), (vgtlzxvvvl v256f64:$vy, v256f64:$vd, i32:$vl)>;
def : Pat<(int_ve_vl_vsc_vvl v256f64:$vx, v256f64:$vy, i32:$vl), (vscvvl v256f64:$vx, v256f64:$vy, i32:$vl)>;
def : Pat<(int_ve_vl_vscot_vvl v256f64:$vx, v256f64:$vy, i32:$vl), (vscotvvl v256f64:$vx, v256f64:$vy, i32:$vl)>;
def : Pat<(int_ve_vl_vscu_vvl v256f64:$vx, v256f64:$vy, i32:$vl), (vscuvvl v256f64:$vx, v256f64:$vy, i32:$vl)>;
def : Pat<(int_ve_vl_vscuot_vvl v256f64:$vx, v256f64:$vy, i32:$vl), (vscuotvvl v256f64:$vx, v256f64:$vy, i32:$vl)>;
def : Pat<(int_ve_vl_vscl_vvl v256f64:$vx, v256f64:$vy, i32:$vl), (vsclvvl v256f64:$vx, v256f64:$vy, i32:$vl)>;
def : Pat<(int_ve_vl_vsclot_vvl v256f64:$vx, v256f64:$vy, i32:$vl), (vsclotvvl v256f64:$vx, v256f64:$vy, i32:$vl)>;
