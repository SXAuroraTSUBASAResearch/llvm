def : Pat<(int_ve_lsv_vvss v256f64:$vx, i32:$sy, i64:$sz), (LSVr v256f64:$vx, i32:$sy, i64:$sz)>;
def : Pat<(int_ve_lvs_svs v256f64:$vx, i32:$sy), (LVSr v256f64:$vx, i32:$sy)>;
def : Pat<(int_ve_vbrd_vs_f64 f64:$sy), (VBRDr f64:$sy)>;
def : Pat<(int_ve_vbrd_vs_i64 i64:$sy), (VBRDr i64:$sy)>;
def : Pat<(int_ve_vbrd_vI (i64 simm7:$sy)), (VBRDi (i64 simm7:$sy))>;
def : Pat<(int_ve_vbrdu_vs f32:$sy), (VBRDur f32:$sy)>;
def : Pat<(int_ve_vbrdl_vs i32:$sy), (VBRDlr i32:$sy)>;
def : Pat<(int_ve_vbrdl_vI (i64 simm7:$sy)), (VBRDli (i64 simm7:$sy))>;
def : Pat<(int_ve_pvbrd_vs i64:$sy), (VBRDpr i64:$sy)>;
def : Pat<(int_ve_vaddul_vvv v256f64:$vy, v256f64:$vz), (VADDlv v256f64:$vy, v256f64:$vz)>;
def : Pat<(int_ve_vaddul_vsv i64:$sy, v256f64:$vz), (VADDlr i64:$sy, v256f64:$vz)>;
def : Pat<(int_ve_vaddul_vIv (i64 simm7:$sy), v256f64:$vz), (VADDli (i64 simm7:$sy), v256f64:$vz)>;
def : Pat<(int_ve_vadduw_vvv v256f64:$vy, v256f64:$vz), (VADDwv v256f64:$vy, v256f64:$vz)>;
def : Pat<(int_ve_vadduw_vsv i32:$sy, v256f64:$vz), (VADDwr i32:$sy, v256f64:$vz)>;
def : Pat<(int_ve_vadduw_vIv (i64 simm7:$sy), v256f64:$vz), (VADDwi (i64 simm7:$sy), v256f64:$vz)>;
def : Pat<(int_ve_pvaddu_vvv v256f64:$vy, v256f64:$vz), (VADDpv v256f64:$vy, v256f64:$vz)>;
def : Pat<(int_ve_pvaddu_vsv i32:$sy, v256f64:$vz), (VADDpr i32:$sy, v256f64:$vz)>;
def : Pat<(int_ve_vaddsw_sx_vvv v256f64:$vy, v256f64:$vz), (VADSwsxv v256f64:$vy, v256f64:$vz)>;
def : Pat<(int_ve_vaddsw_sx_vsv i32:$sy, v256f64:$vz), (VADSwsxr i32:$sy, v256f64:$vz)>;
def : Pat<(int_ve_vaddsw_sx_vIv (i64 simm7:$sy), v256f64:$vz), (VADSwsxi (i64 simm7:$sy), v256f64:$vz)>;
def : Pat<(int_ve_vaddsw_zx_vvv v256f64:$vy, v256f64:$vz), (VADSwzxv v256f64:$vy, v256f64:$vz)>;
def : Pat<(int_ve_vaddsw_zx_vsv i32:$sy, v256f64:$vz), (VADSwzxr i32:$sy, v256f64:$vz)>;
def : Pat<(int_ve_vaddsw_zx_vIv (i64 simm7:$sy), v256f64:$vz), (VADSwzxi (i64 simm7:$sy), v256f64:$vz)>;
def : Pat<(int_ve_pvadds_vvv v256f64:$vy, v256f64:$vz), (VADSpv v256f64:$vy, v256f64:$vz)>;
def : Pat<(int_ve_pvadds_vsv i32:$sy, v256f64:$vz), (VADSpr i32:$sy, v256f64:$vz)>;
def : Pat<(int_ve_vaddsl_vvv v256f64:$vy, v256f64:$vz), (VADXlv v256f64:$vy, v256f64:$vz)>;
def : Pat<(int_ve_vaddsl_vsv i64:$sy, v256f64:$vz), (VADXlr i64:$sy, v256f64:$vz)>;
def : Pat<(int_ve_vaddsl_vIv (i64 simm7:$sy), v256f64:$vz), (VADXli (i64 simm7:$sy), v256f64:$vz)>;
def : Pat<(int_ve_vsubul_vvv v256f64:$vy, v256f64:$vz), (VSUBlv v256f64:$vy, v256f64:$vz)>;
def : Pat<(int_ve_vsubul_vsv i64:$sy, v256f64:$vz), (VSUBlr i64:$sy, v256f64:$vz)>;
def : Pat<(int_ve_vsubul_vIv (i64 simm7:$sy), v256f64:$vz), (VSUBli (i64 simm7:$sy), v256f64:$vz)>;
def : Pat<(int_ve_vsubuw_vvv v256f64:$vy, v256f64:$vz), (VSUBwv v256f64:$vy, v256f64:$vz)>;
def : Pat<(int_ve_vsubuw_vsv i32:$sy, v256f64:$vz), (VSUBwr i32:$sy, v256f64:$vz)>;
def : Pat<(int_ve_vsubuw_vIv (i64 simm7:$sy), v256f64:$vz), (VSUBwi (i64 simm7:$sy), v256f64:$vz)>;
def : Pat<(int_ve_pvsubu_vvv v256f64:$vy, v256f64:$vz), (VSUBpv v256f64:$vy, v256f64:$vz)>;
def : Pat<(int_ve_pvsubu_vsv i32:$sy, v256f64:$vz), (VSUBpr i32:$sy, v256f64:$vz)>;
def : Pat<(int_ve_vsubsw_sx_vvv v256f64:$vy, v256f64:$vz), (VSBSwsxv v256f64:$vy, v256f64:$vz)>;
def : Pat<(int_ve_vsubsw_sx_vsv i32:$sy, v256f64:$vz), (VSBSwsxr i32:$sy, v256f64:$vz)>;
def : Pat<(int_ve_vsubsw_sx_vIv (i64 simm7:$sy), v256f64:$vz), (VSBSwsxi (i64 simm7:$sy), v256f64:$vz)>;
def : Pat<(int_ve_vsubsw_zx_vvv v256f64:$vy, v256f64:$vz), (VSBSwzxv v256f64:$vy, v256f64:$vz)>;
def : Pat<(int_ve_vsubsw_zx_vsv i32:$sy, v256f64:$vz), (VSBSwzxr i32:$sy, v256f64:$vz)>;
def : Pat<(int_ve_vsubsw_zx_vIv (i64 simm7:$sy), v256f64:$vz), (VSBSwzxi (i64 simm7:$sy), v256f64:$vz)>;
def : Pat<(int_ve_pvsubs_vvv v256f64:$vy, v256f64:$vz), (VSBSpv v256f64:$vy, v256f64:$vz)>;
def : Pat<(int_ve_pvsubs_vsv i32:$sy, v256f64:$vz), (VSBSpr i32:$sy, v256f64:$vz)>;
def : Pat<(int_ve_vsubsl_vvv v256f64:$vy, v256f64:$vz), (VSBXlv v256f64:$vy, v256f64:$vz)>;
def : Pat<(int_ve_vsubsl_vsv i64:$sy, v256f64:$vz), (VSBXlr i64:$sy, v256f64:$vz)>;
def : Pat<(int_ve_vsubsl_vIv (i64 simm7:$sy), v256f64:$vz), (VSBXli (i64 simm7:$sy), v256f64:$vz)>;
def : Pat<(int_ve_vand_vvv v256f64:$vy, v256f64:$vz), (VANDv v256f64:$vy, v256f64:$vz)>;
def : Pat<(int_ve_vand_vsv i64:$sy, v256f64:$vz), (VANDr i64:$sy, v256f64:$vz)>;
def : Pat<(int_ve_pvand_vvv v256f64:$vy, v256f64:$vz), (VANDpv v256f64:$vy, v256f64:$vz)>;
def : Pat<(int_ve_pvand_vsv i64:$sy, v256f64:$vz), (VANDpr i64:$sy, v256f64:$vz)>;
def : Pat<(int_ve_vor_vvv v256f64:$vy, v256f64:$vz), (VORv v256f64:$vy, v256f64:$vz)>;
def : Pat<(int_ve_vor_vsv i64:$sy, v256f64:$vz), (VORr i64:$sy, v256f64:$vz)>;
def : Pat<(int_ve_pvor_vvv v256f64:$vy, v256f64:$vz), (VORpv v256f64:$vy, v256f64:$vz)>;
def : Pat<(int_ve_pvor_vsv i64:$sy, v256f64:$vz), (VORpr i64:$sy, v256f64:$vz)>;
def : Pat<(int_ve_vxor_vvv v256f64:$vy, v256f64:$vz), (VXORv v256f64:$vy, v256f64:$vz)>;
def : Pat<(int_ve_vxor_vsv i64:$sy, v256f64:$vz), (VXORr i64:$sy, v256f64:$vz)>;
def : Pat<(int_ve_pvxor_vvv v256f64:$vy, v256f64:$vz), (VXORpv v256f64:$vy, v256f64:$vz)>;
def : Pat<(int_ve_pvxor_vsv i64:$sy, v256f64:$vz), (VXORpr i64:$sy, v256f64:$vz)>;
def : Pat<(int_ve_veqv_vvv v256f64:$vy, v256f64:$vz), (VEQVv v256f64:$vy, v256f64:$vz)>;
def : Pat<(int_ve_veqv_vsv i64:$sy, v256f64:$vz), (VEQVr i64:$sy, v256f64:$vz)>;
def : Pat<(int_ve_pveqv_vvv v256f64:$vy, v256f64:$vz), (VEQVpv v256f64:$vy, v256f64:$vz)>;
def : Pat<(int_ve_pveqv_vsv i64:$sy, v256f64:$vz), (VEQVpr i64:$sy, v256f64:$vz)>;
def : Pat<(int_ve_vsll_vvv v256f64:$vz, v256f64:$vy), (VSLLv v256f64:$vz, v256f64:$vy)>;
def : Pat<(int_ve_vsll_vvs v256f64:$vz, i64:$sy), (VSLLr v256f64:$vz, i64:$sy)>;
def : Pat<(int_ve_vsll_vvN v256f64:$vz, (i64 uimm6:$sy)), (VSLLi v256f64:$vz, (i64 uimm6:$sy))>;
def : Pat<(int_ve_pvsll_vvv v256f64:$vz, v256f64:$vy), (VSLLpv v256f64:$vz, v256f64:$vy)>;
def : Pat<(int_ve_pvsll_vvs v256f64:$vz, i64:$sy), (VSLLpr v256f64:$vz, i64:$sy)>;
def : Pat<(int_ve_vsrl_vvv v256f64:$vz, v256f64:$vy), (VSRLv v256f64:$vz, v256f64:$vy)>;
def : Pat<(int_ve_vsrl_vvs v256f64:$vz, i64:$sy), (VSRLr v256f64:$vz, i64:$sy)>;
def : Pat<(int_ve_vsrl_vvN v256f64:$vz, (i64 uimm6:$sy)), (VSRLi v256f64:$vz, (i64 uimm6:$sy))>;
def : Pat<(int_ve_pvsrl_vvv v256f64:$vz, v256f64:$vy), (VSRLpv v256f64:$vz, v256f64:$vy)>;
def : Pat<(int_ve_pvsrl_vvs v256f64:$vz, i64:$sy), (VSRLpr v256f64:$vz, i64:$sy)>;
def : Pat<(int_ve_vsfa_vvss v256f64:$vz, i64:$sy, i64:$sz), (VSFAr v256f64:$vz, i64:$sy, i64:$sz)>;
def : Pat<(int_ve_vsfa_vvIs v256f64:$vz, (i64 simm7:$sy), i64:$sz), (VSFAi v256f64:$vz, (i64 simm7:$sy), i64:$sz)>;
def : Pat<(int_ve_vfaddd_vvv v256f64:$vy, v256f64:$vz), (VFADdv v256f64:$vy, v256f64:$vz)>;
def : Pat<(int_ve_vfaddd_vsv f64:$sy, v256f64:$vz), (VFADdr f64:$sy, v256f64:$vz)>;
def : Pat<(int_ve_vfaddd_vvvmv v256f64:$vy, v256f64:$vz, v4i64:$vm, v256f64:$vd), (VFADdvm v256f64:$vy, v256f64:$vz, v4i64:$vm, v256f64:$vd)>;
def : Pat<(int_ve_vfadds_vvv v256f64:$vy, v256f64:$vz), (VFADsv v256f64:$vy, v256f64:$vz)>;
def : Pat<(int_ve_vfadds_vsv f32:$sy, v256f64:$vz), (VFADsr f32:$sy, v256f64:$vz)>;
def : Pat<(int_ve_pvfadd_vvv v256f64:$vy, v256f64:$vz), (VFADpv v256f64:$vy, v256f64:$vz)>;
def : Pat<(int_ve_pvfadd_vsv i64:$sy, v256f64:$vz), (VFADpr i64:$sy, v256f64:$vz)>;
def : Pat<(int_ve_vfsubd_vvv v256f64:$vy, v256f64:$vz), (VFSBdv v256f64:$vy, v256f64:$vz)>;
def : Pat<(int_ve_vfsubd_vsv f64:$sy, v256f64:$vz), (VFSBdr f64:$sy, v256f64:$vz)>;
def : Pat<(int_ve_vfsubd_vvvmv v256f64:$vy, v256f64:$vz, v4i64:$vm, v256f64:$vd), (VFSBdvm v256f64:$vy, v256f64:$vz, v4i64:$vm, v256f64:$vd)>;
def : Pat<(int_ve_vfsubs_vvv v256f64:$vy, v256f64:$vz), (VFSBsv v256f64:$vy, v256f64:$vz)>;
def : Pat<(int_ve_vfsubs_vsv f32:$sy, v256f64:$vz), (VFSBsr f32:$sy, v256f64:$vz)>;
def : Pat<(int_ve_pvfsub_vvv v256f64:$vy, v256f64:$vz), (VFSBpv v256f64:$vy, v256f64:$vz)>;
def : Pat<(int_ve_pvfsub_vsv i64:$sy, v256f64:$vz), (VFSBpr i64:$sy, v256f64:$vz)>;
def : Pat<(int_ve_vfmuld_vvv v256f64:$vy, v256f64:$vz), (VFMPdv v256f64:$vy, v256f64:$vz)>;
def : Pat<(int_ve_vfmuld_vsv f64:$sy, v256f64:$vz), (VFMPdr f64:$sy, v256f64:$vz)>;
def : Pat<(int_ve_vfmuld_vvvmv v256f64:$vy, v256f64:$vz, v4i64:$vm, v256f64:$vd), (VFMPdvm v256f64:$vy, v256f64:$vz, v4i64:$vm, v256f64:$vd)>;
def : Pat<(int_ve_vfmuls_vvv v256f64:$vy, v256f64:$vz), (VFMPsv v256f64:$vy, v256f64:$vz)>;
def : Pat<(int_ve_vfmuls_vsv f32:$sy, v256f64:$vz), (VFMPsr f32:$sy, v256f64:$vz)>;
def : Pat<(int_ve_pvfmul_vvv v256f64:$vy, v256f64:$vz), (VFMPpv v256f64:$vy, v256f64:$vz)>;
def : Pat<(int_ve_pvfmul_vsv i64:$sy, v256f64:$vz), (VFMPpr i64:$sy, v256f64:$vz)>;
def : Pat<(int_ve_vfdivd_vvv v256f64:$vy, v256f64:$vz), (VFDVdv v256f64:$vy, v256f64:$vz)>;
def : Pat<(int_ve_vfdivd_vsv f64:$sy, v256f64:$vz), (VFDVdr f64:$sy, v256f64:$vz)>;
def : Pat<(int_ve_vfdivd_vvvmv v256f64:$vy, v256f64:$vz, v4i64:$vm, v256f64:$vd), (VFDVdvm v256f64:$vy, v256f64:$vz, v4i64:$vm, v256f64:$vd)>;
def : Pat<(int_ve_vfdivs_vvv v256f64:$vy, v256f64:$vz), (VFDVsv v256f64:$vy, v256f64:$vz)>;
def : Pat<(int_ve_vfdivs_vsv f32:$sy, v256f64:$vz), (VFDVsr f32:$sy, v256f64:$vz)>;
def : Pat<(int_ve_vfmadd_vvvv v256f64:$vy, v256f64:$vz, v256f64:$vw), (VFMADdv v256f64:$vy, v256f64:$vz, v256f64:$vw)>;
def : Pat<(int_ve_vfmadd_vsvv f64:$sy, v256f64:$vz, v256f64:$vw), (VFMADdr f64:$sy, v256f64:$vz, v256f64:$vw)>;
def : Pat<(int_ve_vfmadd_vvsv v256f64:$vy, f64:$sy, v256f64:$vw), (VFMADdr2 v256f64:$vy, f64:$sy, v256f64:$vw)>;
def : Pat<(int_ve_vfmads_vvvv v256f64:$vy, v256f64:$vz, v256f64:$vw), (VFMADsv v256f64:$vy, v256f64:$vz, v256f64:$vw)>;
def : Pat<(int_ve_vfmads_vsvv f32:$sy, v256f64:$vz, v256f64:$vw), (VFMADsr f32:$sy, v256f64:$vz, v256f64:$vw)>;
def : Pat<(int_ve_vfmads_vvsv v256f64:$vy, f32:$sy, v256f64:$vw), (VFMADsr2 v256f64:$vy, f32:$sy, v256f64:$vw)>;
def : Pat<(int_ve_pvfmad_vvvv v256f64:$vy, v256f64:$vz, v256f64:$vw), (VFMADpv v256f64:$vy, v256f64:$vz, v256f64:$vw)>;
def : Pat<(int_ve_pvfmad_vsvv i64:$sy, v256f64:$vz, v256f64:$vw), (VFMADpr i64:$sy, v256f64:$vz, v256f64:$vw)>;
def : Pat<(int_ve_pvfmad_vvsv v256f64:$vy, i64:$sy, v256f64:$vw), (VFMADpr2 v256f64:$vy, i64:$sy, v256f64:$vw)>;
def : Pat<(int_ve_vfmsbd_vvvv v256f64:$vy, v256f64:$vz, v256f64:$vw), (VFMSBdv v256f64:$vy, v256f64:$vz, v256f64:$vw)>;
def : Pat<(int_ve_vfmsbd_vsvv f64:$sy, v256f64:$vz, v256f64:$vw), (VFMSBdr f64:$sy, v256f64:$vz, v256f64:$vw)>;
def : Pat<(int_ve_vfmsbd_vvsv v256f64:$vy, f64:$sy, v256f64:$vw), (VFMSBdr2 v256f64:$vy, f64:$sy, v256f64:$vw)>;
def : Pat<(int_ve_vfmsbs_vvvv v256f64:$vy, v256f64:$vz, v256f64:$vw), (VFMSBsv v256f64:$vy, v256f64:$vz, v256f64:$vw)>;
def : Pat<(int_ve_vfmsbs_vsvv f32:$sy, v256f64:$vz, v256f64:$vw), (VFMSBsr f32:$sy, v256f64:$vz, v256f64:$vw)>;
def : Pat<(int_ve_vfmsbs_vvsv v256f64:$vy, f32:$sy, v256f64:$vw), (VFMSBsr2 v256f64:$vy, f32:$sy, v256f64:$vw)>;
def : Pat<(int_ve_pvfmsb_vvvv v256f64:$vy, v256f64:$vz, v256f64:$vw), (VFMSBpv v256f64:$vy, v256f64:$vz, v256f64:$vw)>;
def : Pat<(int_ve_pvfmsb_vsvv i64:$sy, v256f64:$vz, v256f64:$vw), (VFMSBpr i64:$sy, v256f64:$vz, v256f64:$vw)>;
def : Pat<(int_ve_pvfmsb_vvsv v256f64:$vy, i64:$sy, v256f64:$vw), (VFMSBpr2 v256f64:$vy, i64:$sy, v256f64:$vw)>;
def : Pat<(int_ve_vfnmadd_vvvv v256f64:$vy, v256f64:$vz, v256f64:$vw), (VFNMADdv v256f64:$vy, v256f64:$vz, v256f64:$vw)>;
def : Pat<(int_ve_vfnmadd_vsvv f64:$sy, v256f64:$vz, v256f64:$vw), (VFNMADdr f64:$sy, v256f64:$vz, v256f64:$vw)>;
def : Pat<(int_ve_vfnmadd_vvsv v256f64:$vy, f64:$sy, v256f64:$vw), (VFNMADdr2 v256f64:$vy, f64:$sy, v256f64:$vw)>;
def : Pat<(int_ve_vfnmads_vvvv v256f64:$vy, v256f64:$vz, v256f64:$vw), (VFNMADsv v256f64:$vy, v256f64:$vz, v256f64:$vw)>;
def : Pat<(int_ve_vfnmads_vsvv f32:$sy, v256f64:$vz, v256f64:$vw), (VFNMADsr f32:$sy, v256f64:$vz, v256f64:$vw)>;
def : Pat<(int_ve_vfnmads_vvsv v256f64:$vy, f32:$sy, v256f64:$vw), (VFNMADsr2 v256f64:$vy, f32:$sy, v256f64:$vw)>;
def : Pat<(int_ve_pvfnmad_vvvv v256f64:$vy, v256f64:$vz, v256f64:$vw), (VFNMADpv v256f64:$vy, v256f64:$vz, v256f64:$vw)>;
def : Pat<(int_ve_pvfnmad_vsvv i64:$sy, v256f64:$vz, v256f64:$vw), (VFNMADpr i64:$sy, v256f64:$vz, v256f64:$vw)>;
def : Pat<(int_ve_pvfnmad_vvsv v256f64:$vy, i64:$sy, v256f64:$vw), (VFNMADpr2 v256f64:$vy, i64:$sy, v256f64:$vw)>;
def : Pat<(int_ve_vfnmsbd_vvvv v256f64:$vy, v256f64:$vz, v256f64:$vw), (VFNMSBdv v256f64:$vy, v256f64:$vz, v256f64:$vw)>;
def : Pat<(int_ve_vfnmsbd_vsvv f64:$sy, v256f64:$vz, v256f64:$vw), (VFNMSBdr f64:$sy, v256f64:$vz, v256f64:$vw)>;
def : Pat<(int_ve_vfnmsbd_vvsv v256f64:$vy, f64:$sy, v256f64:$vw), (VFNMSBdr2 v256f64:$vy, f64:$sy, v256f64:$vw)>;
def : Pat<(int_ve_vfnmsbs_vvvv v256f64:$vy, v256f64:$vz, v256f64:$vw), (VFNMSBsv v256f64:$vy, v256f64:$vz, v256f64:$vw)>;
def : Pat<(int_ve_vfnmsbs_vsvv f32:$sy, v256f64:$vz, v256f64:$vw), (VFNMSBsr f32:$sy, v256f64:$vz, v256f64:$vw)>;
def : Pat<(int_ve_vfnmsbs_vvsv v256f64:$vy, f32:$sy, v256f64:$vw), (VFNMSBsr2 v256f64:$vy, f32:$sy, v256f64:$vw)>;
def : Pat<(int_ve_pvfnmsb_vvvv v256f64:$vy, v256f64:$vz, v256f64:$vw), (VFNMSBpv v256f64:$vy, v256f64:$vz, v256f64:$vw)>;
def : Pat<(int_ve_pvfnmsb_vsvv i64:$sy, v256f64:$vz, v256f64:$vw), (VFNMSBpr i64:$sy, v256f64:$vz, v256f64:$vw)>;
def : Pat<(int_ve_pvfnmsb_vvsv v256f64:$vy, i64:$sy, v256f64:$vw), (VFNMSBpr2 v256f64:$vy, i64:$sy, v256f64:$vw)>;
def : Pat<(int_ve_vfmkl_mcv (i32 uimm6:$cc), v256f64:$vz), (VFMKv (i32 uimm6:$cc), v256f64:$vz)>;
def : Pat<(int_ve_vfmkw_mcv (i32 uimm6:$cc), v256f64:$vz), (VFMSv (i32 uimm6:$cc), v256f64:$vz)>;
def : Pat<(int_ve_vfmkd_mcv (i32 uimm6:$cc), v256f64:$vz), (VFMFv (i32 uimm6:$cc), v256f64:$vz)>;
def : Pat<(int_ve_pvfmksup_mcv (i32 uimm6:$cc), v256f64:$vz), (VFMFuv (i32 uimm6:$cc), v256f64:$vz)>;
def : Pat<(int_ve_pvfmkslo_mcv (i32 uimm6:$cc), v256f64:$vz), (VFMFlv (i32 uimm6:$cc), v256f64:$vz)>;
def : Pat<(int_ve_vsumw_sx_vv v256f64:$vy), (VSUMSsxv v256f64:$vy)>;
def : Pat<(int_ve_vsumw_zx_vv v256f64:$vy), (VSUMSzxv v256f64:$vy)>;
def : Pat<(int_ve_vsuml_vv v256f64:$vy), (VSUMXv v256f64:$vy)>;
def : Pat<(int_ve_vfsumd_vv v256f64:$vy), (VFSUMdv v256f64:$vy)>;
def : Pat<(int_ve_vfsums_vv v256f64:$vy), (VFSUMsv v256f64:$vy)>;
def : Pat<(int_ve_vgt_vv v256f64:$vy), (VGTv v256f64:$vy)>;
